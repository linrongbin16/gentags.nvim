name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}-ci
  cancel-in-progress: true
jobs:
  commit:
    name: Commit
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install commons.nvim
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          git clone --depth=1 https://github.com/linrongbin16/commons.nvim.git ~/.commons.nvim
          rm -rf ./lua/gentags/commons
          cp -rf ~/.commons.nvim/lua/commons ./lua/gentags/
          cp ~/.commons.nvim/version.txt ./lua/gentags/commons/version.txt
          find ./lua/gentags/commons -type f -name '*.lua' -exec sed -i 's/require("commons./require("gentags.commons./g' {} \;
      - uses: cargo-bins/cargo-binstall@main
      - name: Selene
        run: |
          cargo binstall --no-confirm selene
          selene --config selene.toml ./lua
      - uses: JohnnyMorganz/stylua-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./lua ./test
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-commit"
          push_options: "--force"
  unit_test:
    name: Unit Test
    needs:
      - lint
    strategy:
      matrix:
        nvim_version: [stable, nightly, v0.7.0]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install neovim
        uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: ${{ matrix.nvim_version }}
      - name: Install luajit
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "luajit-2.1.0-beta3"
      - name: Install luarocks
        uses: leafo/gh-actions-luarocks@v4
      - name: Run test cases
        shell: bash
        run: |
          luarocks install luacov
          luarocks install cluacov
          luarocks install vusted
          vusted --coverage --shuffle ./test
      - name: Generate coverage reports
        shell: bash
        run: |
          echo "ls ."
          ls -l .
          echo "run luacov"
          luacov
          echo "ls ."
          ls -l .
          echo "cat ./luacov.report.out"
          cat ./luacov.report.out
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: luacov.report.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: gentags.nvim
      - uses: actions/checkout@v4
      - uses: rickstaa/action-create-tag@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          tag: stable
          message: "Current stable release: ${{ steps.release.outputs.tag_name }}"
          tag_exists_error: false
          force_push_tag: true
      - name: LuaRocks Upload
        uses: nvim-neorocks/luarocks-tag-release@v5
        if: ${{ steps.release.outputs.release_created }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          version: ${{ steps.release.outputs.tag_name }}
          labels: |
            neovim
            vim
