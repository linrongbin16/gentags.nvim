!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/rlin/github/linrongbin16/gentags.nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
0	.luarc.json	/^  "diagnostics.globals": ["vim", "describe", "before_each", "it", "jit"],$/;"	s	array:diagnostics.globals
1	.luarc.json	/^  "diagnostics.globals": ["vim", "describe", "before_each", "it", "jit"],$/;"	s	array:diagnostics.globals
1.0.0 (2023-12-11)	CHANGELOG.md	/^## 1.0.0 (2023-12-11)$/;"	s	chapter:Changelog
2	.luarc.json	/^  "diagnostics.globals": ["vim", "describe", "before_each", "it", "jit"],$/;"	s	array:diagnostics.globals
3	.luarc.json	/^  "diagnostics.globals": ["vim", "describe", "before_each", "it", "jit"],$/;"	s	array:diagnostics.globals
4	.luarc.json	/^  "diagnostics.globals": ["vim", "describe", "before_each", "it", "jit"],$/;"	s	array:diagnostics.globals
Changelog	CHANGELOG.md	/^# Changelog$/;"	c
Contribute	README.md	/^## Contribute$/;"	s	chapter:gentags.nvim
Development	README.md	/^## Development$/;"	s	chapter:gentags.nvim
Features	CHANGELOG.md	/^### Features$/;"	S	section:Changelog""1.0.0 (2023-12-11)
Features	README.md	/^## Features$/;"	s	chapter:gentags.nvim
Install	README.md	/^## Install$/;"	s	chapter:gentags.nvim
M[name]	lua/gentags/commons/termcolors.lua	/^    M[name] = function(text, hl)$/;"	f
Table of Contents	README.md	/^## Table of Contents$/;"	s	chapter:gentags.nvim
Usage	README.md	/^## Usage$/;"	s	chapter:gentags.nvim
_dec	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:_dec(idx)$/;"	f	unknown:RingBuffer
_double_backslash	lua/gentags/commons/paths.lua	/^  local function _double_backslash(s)$/;"	f
_handle_stderr	lua/gentags/commons/spawn.lua	/^  local function _handle_stderr(err, data)$/;"	f
_handle_stdout	lua/gentags/commons/spawn.lua	/^  local function _handle_stdout(err, data)$/;"	f
_inc	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:_inc(idx)$/;"	f	unknown:RingBuffer
_log	lua/gentags/commons/logging.lua	/^function Logger:_log(dbg, lvl, fmt, ...)$/;"	f	unknown:Logger
_on_exit	lua/gentags/commons/_system.lua	/^local function _on_exit(state, code, signal, on_exit)$/;"	f
_on_exit	lua/gentags/ctags.lua	/^  local function _on_exit(completed)$/;"	f
_on_stderr	lua/gentags/ctags.lua	/^  local function _on_stderr(line)$/;"	f
_on_stdout	lua/gentags/ctags.lua	/^  local function _on_stdout(line)$/;"	f
_process	lua/gentags/commons/spawn.lua	/^  local function _process(buffer, fn_line_processor)$/;"	f
_read_chunk	lua/gentags/commons/fileios.lua	/^function FileLineReader:_read_chunk()$/;"	f	unknown:FileLineReader
_single_backslash	lua/gentags/commons/paths.lua	/^  local function _single_backslash(s)$/;"	f
_timeout	lua/gentags/commons/_system.lua	/^function SystemObj:_timeout(signal)$/;"	f	unknown:SystemObj
add	lua/gentags/commons/logging.lua	/^M.add = function(logger)$/;"	f	unknown:M
add_handler	lua/gentags/commons/logging.lua	/^function Logger:add_handler(handler)$/;"	f	unknown:Logger
asyncreadfile	lua/gentags/commons/fileios.lua	/^M.asyncreadfile = function(filename, on_complete, opts)$/;"	f	unknown:M
asyncwritefile	lua/gentags/commons/fileios.lua	/^M.asyncwritefile = function(filename, content, on_complete)$/;"	f	unknown:M
auto_incremental_id	lua/gentags/commons/numbers.lua	/^M.auto_incremental_id = function()$/;"	f	unknown:M
base_env	lua/gentags/commons/_system.lua	/^local function base_env()$/;"	f
blank	lua/gentags/commons/strings.lua	/^M.blank = function(s)$/;"	f	unknown:M
boolean	lua/gentags/commons/_json.lua	/^function encode_map.boolean(v)$/;"	f	unknown:encode_map
bound	lua/gentags/commons/numbers.lua	/^M.bound = function(value, left, right)$/;"	f	unknown:M
callback	lua/gentags.lua	/^    callback = function(event)$/;"	f
clear	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:clear()$/;"	f	unknown:RingBuffer
close	lua/gentags/commons/fileios.lua	/^function FileLineReader:close()$/;"	f	unknown:FileLineReader
close	lua/gentags/commons/logging.lua	/^function FileHandler:close()$/;"	f	unknown:FileHandler
close_handle	lua/gentags/commons/_system.lua	/^local function close_handle(handle)$/;"	f
close_handles	lua/gentags/commons/_system.lua	/^local function close_handles(state)$/;"	f
consume_byte	lua/gentags/commons/_json.lua	/^local function consume_byte(c)$/;"	f
convertreal	lua/gentags/commons/_json.lua	/^    function convertreal(v)$/;"	f
convertreal	lua/gentags/commons/_json.lua	/^local function convertreal(v)$/;"	f
createEmptyObject	lua/gentags/commons/_json.lua	/^function json.createEmptyObject()$/;"	f	unknown:json
debug	lua/gentags/commons/logging.lua	/^M.debug = function(fmt, ...)$/;"	f	unknown:M
debug	lua/gentags/commons/logging.lua	/^function Logger:debug(fmt, ...)$/;"	f	unknown:Logger
decode	lua/gentags/commons/_json.lua	/^function json.decode(str)$/;"	f	unknown:json
decode	lua/gentags/commons/_json.lua	/^local function decode()$/;"	f
decode	lua/gentags/commons/jsons.lua	/^M.decode = function(j)$/;"	f	unknown:M
decode_array	lua/gentags/commons/_json.lua	/^local function decode_array()$/;"	f
decode_error	lua/gentags/commons/_json.lua	/^local function decode_error(msg)$/;"	f
decode_false	lua/gentags/commons/_json.lua	/^local function decode_false()$/;"	f
decode_item	lua/gentags/commons/_json.lua	/^local function decode_item()$/;"	f
decode_null	lua/gentags/commons/_json.lua	/^local function decode_null()$/;"	f
decode_number	lua/gentags/commons/_json.lua	/^local function decode_number()$/;"	f
decode_number_negative	lua/gentags/commons/_json.lua	/^local function decode_number_negative()$/;"	f
decode_number_zero	lua/gentags/commons/_json.lua	/^local function decode_number_zero()$/;"	f
decode_object	lua/gentags/commons/_json.lua	/^local function decode_object()$/;"	f
decode_string	lua/gentags/commons/_json.lua	/^local function decode_string()$/;"	f
decode_true	lua/gentags/commons/_json.lua	/^local function decode_true()$/;"	f
decode_unicode_escape	lua/gentags/commons/_json.lua	/^local function decode_unicode_escape(s)$/;"	f
decode_unicode_surrogate	lua/gentags/commons/_json.lua	/^local function decode_unicode_surrogate(s1, s2)$/;"	f
default_handler	lua/gentags/commons/_system.lua	/^local function default_handler(stream, text, bucket)$/;"	f
diagnostics.globals	.luarc.json	/^  "diagnostics.globals": ["vim", "describe", "before_each", "it", "jit"],$/;"	a
done	lua/gentags/commons/_system.lua	/^  local done = vim.wait(timeout or state.timeout or MAX_TIMEOUT, function()$/;"	f
empty	lua/gentags/commons/strings.lua	/^M.empty = function(s)$/;"	f	unknown:M
encode	lua/gentags/commons/_json.lua	/^function json.encode(v)$/;"	f	unknown:json
encode	lua/gentags/commons/_json.lua	/^local function encode(v)$/;"	f
encode	lua/gentags/commons/jsons.lua	/^M.encode = function(t)$/;"	f	unknown:M
encode_map["nil"]	lua/gentags/commons/_json.lua	/^encode_map["nil"] = function ()$/;"	f
encode_string	lua/gentags/commons/_json.lua	/^local function encode_string(v)$/;"	f
encode_unexpected	lua/gentags/commons/_json.lua	/^local function encode_unexpected(v)$/;"	f
endswith	lua/gentags/commons/strings.lua	/^M.endswith = function(s, t, opts)$/;"	f	unknown:M
ensure	lua/gentags/commons/logging.lua	/^M.ensure = function(cond, fmt, ...)$/;"	f	unknown:M
ensure	lua/gentags/commons/logging.lua	/^function Logger:ensure(cond, fmt, ...)$/;"	f	unknown:Logger
eq	lua/gentags/commons/numbers.lua	/^M.eq = function(a, b)$/;"	f	unknown:M
erase	lua/gentags/commons/termcolors.lua	/^M.erase = function(text)$/;"	f	unknown:M
err	lua/gentags/commons/logging.lua	/^M.err = function(fmt, ...)$/;"	f	unknown:M
err	lua/gentags/commons/logging.lua	/^function Logger:err(fmt, ...)$/;"	f	unknown:Logger
escape	lua/gentags/commons/termcolors.lua	/^M.escape = function(attr, code)$/;"	f	unknown:M
expect_byte	lua/gentags/commons/_json.lua	/^local function expect_byte(c)$/;"	f
find	lua/gentags/commons/strings.lua	/^M.find = function(s, t, start)$/;"	f	unknown:M
find_line	lua/gentags/commons/_json.lua	/^local function find_line()$/;"	f
format	lua/gentags/commons/logging.lua	/^function Formatter:format(meta)$/;"	f	unknown:Formatter
gc	lua/gentags/ctags.lua	/^M.gc = function()$/;"	f	unknown:M
ge	lua/gentags/commons/numbers.lua	/^M.ge = function(a, b)$/;"	f	unknown:M
gentags.nvim	README.md	/^# gentags.nvim$/;"	c
get	lua/gentags/commons/logging.lua	/^M.get = function(name)$/;"	f	unknown:M
get	lua/gentags/configs.lua	/^M.get = function()$/;"	f	unknown:M
get_buf_option	lua/gentags/commons/apis.lua	/^M.get_buf_option = function(bufnr, name)$/;"	f	unknown:M
get_buf_option	lua/gentags/commons/buffers.lua	/^M.get_buf_option = function(bufnr, name)$/;"	f	unknown:M
get_filename	lua/gentags/utils.lua	/^M.get_filename = function()$/;"	f	unknown:M
get_filetype	lua/gentags/utils.lua	/^M.get_filetype = function()$/;"	f	unknown:M
get_tags_filename	lua/gentags/utils.lua	/^M.get_tags_filename = function(filepath)$/;"	f	unknown:M
get_win_option	lua/gentags/commons/apis.lua	/^M.get_win_option = function(winnr, name)$/;"	f	unknown:M
get_win_option	lua/gentags/commons/windows.lua	/^M.get_win_option = function(winnr, name)$/;"	f	unknown:M
get_word	lua/gentags/commons/_json.lua	/^local function get_word()$/;"	f
get_workspace	lua/gentags/utils.lua	/^M.get_workspace = function(cwd)$/;"	f	unknown:M
gt	lua/gentags/commons/numbers.lua	/^M.gt = function(a, b)$/;"	f	unknown:M
has	lua/gentags/commons/logging.lua	/^M.has = function(name)$/;"	f	unknown:M
has_next	lua/gentags/commons/fileios.lua	/^function FileLineReader:has_next()$/;"	f	unknown:FileLineReader
has_next	lua/gentags/commons/ringbuf.lua	/^function _RingBufferIterator:has_next()$/;"	f	unknown:_RingBufferIterator
has_next	lua/gentags/commons/ringbuf.lua	/^function _RingBufferRIterator:has_next()$/;"	f	unknown:_RingBufferRIterator
impl	lua/gentags/commons/fileios.lua	/^  local function impl()$/;"	f
impl	lua/gentags/commons/logging.lua	/^    local function impl(idx)$/;"	f
info	lua/gentags/commons/logging.lua	/^M.info = function(fmt, ...)$/;"	f	unknown:M
info	lua/gentags/commons/logging.lua	/^function Logger:info(fmt, ...)$/;"	f	unknown:Logger
init_logging	lua/gentags.lua	/^  local function init_logging()$/;"	f
isObject	lua/gentags/commons/_json.lua	/^function json.isObject(t)$/;"	f	unknown:json
is_closing	lua/gentags/commons/_system.lua	/^function SystemObj:is_closing()$/;"	f	unknown:SystemObj
isalnum	lua/gentags/commons/strings.lua	/^M.isalnum = function(c)$/;"	f	unknown:M
isalpha	lua/gentags/commons/strings.lua	/^M.isalpha = function(c)$/;"	f	unknown:M
isdigit	lua/gentags/commons/strings.lua	/^M.isdigit = function(c)$/;"	f	unknown:M
islower	lua/gentags/commons/strings.lua	/^M.islower = function(c)$/;"	f	unknown:M
isspace	lua/gentags/commons/strings.lua	/^M.isspace = function(c)$/;"	f	unknown:M
isupper	lua/gentags/commons/strings.lua	/^M.isupper = function(c)$/;"	f	unknown:M
isxdigit	lua/gentags/commons/strings.lua	/^M.isxdigit = function(c)$/;"	f	unknown:M
iterator	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:iterator()$/;"	f	unknown:RingBuffer
join	lua/gentags/commons/paths.lua	/^M.join = function(...)$/;"	f	unknown:M
kill	lua/gentags/commons/_system.lua	/^function SystemObj:kill(signal)$/;"	f	unknown:SystemObj
le	lua/gentags/commons/numbers.lua	/^M.le = function(a, b)$/;"	f	unknown:M
list_empty	lua/gentags/commons/tables.lua	/^M.list_empty = function(l)$/;"	f	unknown:M
list_index	lua/gentags/commons/tables.lua	/^M.list_index = function(i, n)$/;"	f	unknown:M
list_not_empty	lua/gentags/commons/tables.lua	/^M.list_not_empty = function(l)$/;"	f	unknown:M
log	lua/gentags/commons/logging.lua	/^M.log = function(level, fmt, ...)$/;"	f	unknown:M
log	lua/gentags/commons/logging.lua	/^function Logger:log(level, fmt, ...)$/;"	f	unknown:Logger
lt	lua/gentags/commons/numbers.lua	/^M.lt = function(a, b)$/;"	f	unknown:M
ltrim	lua/gentags/commons/strings.lua	/^M.ltrim = function(s, t)$/;"	f	unknown:M
make_detect	lua/gentags/commons/logging.lua	/^  local function make_detect(tag)$/;"	f
math_type	lua/gentags/commons/_json.lua	/^    function math_type(v)$/;"	f
max	lua/gentags/commons/numbers.lua	/^M.max = function(f, a, ...)$/;"	f	unknown:M
min	lua/gentags/commons/numbers.lua	/^M.min = function(f, a, ...)$/;"	f	unknown:M
mod	lua/gentags/commons/numbers.lua	/^M.mod = function(a, b)$/;"	f	unknown:M
ne	lua/gentags/commons/numbers.lua	/^M.ne = function(a, b)$/;"	f	unknown:M
new	lua/gentags/commons/logging.lua	/^function ConsoleHandler:new(formatter)$/;"	f	unknown:ConsoleHandler
new	lua/gentags/commons/logging.lua	/^function FileHandler:new(filepath, filemode, formatter)$/;"	f	unknown:FileHandler
new	lua/gentags/commons/logging.lua	/^function Formatter:new(fmt, opts)$/;"	f	unknown:Formatter
new	lua/gentags/commons/logging.lua	/^function Logger:new(name, level)$/;"	f	unknown:Logger
new	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:new(maxsize)$/;"	f	unknown:RingBuffer
new	lua/gentags/commons/ringbuf.lua	/^function _RingBufferIterator:new(ringbuf, index)$/;"	f	unknown:_RingBufferIterator
new	lua/gentags/commons/ringbuf.lua	/^function _RingBufferRIterator:new(ringbuf, index)$/;"	f	unknown:_RingBufferRIterator
new_systemobj	lua/gentags/commons/_system.lua	/^local function new_systemobj(state)$/;"	f
next	lua/gentags/commons/fileios.lua	/^function FileLineReader:next()$/;"	f	unknown:FileLineReader
next	lua/gentags/commons/ringbuf.lua	/^function _RingBufferIterator:next()$/;"	f	unknown:_RingBufferIterator
next	lua/gentags/commons/ringbuf.lua	/^function _RingBufferRIterator:next()$/;"	f	unknown:_RingBufferRIterator
next_byte	lua/gentags/commons/_json.lua	/^local function next_byte()$/;"	f
normalize	lua/gentags/commons/paths.lua	/^M.normalize = function(p, opts)$/;"	f	unknown:M
not_blank	lua/gentags/commons/strings.lua	/^M.not_blank = function(s)$/;"	f	unknown:M
not_empty	lua/gentags/commons/strings.lua	/^M.not_empty = function(s)$/;"	f	unknown:M
null	lua/gentags/commons/_json.lua	/^    json.null = function () end$/;"	f	unknown:json
number	lua/gentags/commons/_json.lua	/^function encode_map.number(v)$/;"	f	unknown:encode_map
on_exit	lua/gentags/commons/_system.lua	/^    on_exit = { on_exit, 'function', true },$/;"	f
open	lua/gentags/commons/fileios.lua	/^function FileLineReader:open(filename, batchsize)$/;"	f	unknown:FileLineReader
parent	lua/gentags/commons/paths.lua	/^M.parent = function(p)$/;"	f	unknown:M
peek	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:peek()$/;"	f	unknown:RingBuffer
pipename	lua/gentags/commons/paths.lua	/^M.pipename = function()$/;"	f	unknown:M
pop	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:pop()$/;"	f	unknown:RingBuffer
push	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:push(item)$/;"	f	unknown:RingBuffer
random	lua/gentags/commons/numbers.lua	/^M.random = function(m, n)$/;"	f	unknown:M
readfile	lua/gentags/commons/fileios.lua	/^M.readfile = function(filename, opts)$/;"	f	unknown:M
readlines	lua/gentags/commons/fileios.lua	/^M.readlines = function(filename)$/;"	f	unknown:M
reduce	lua/gentags/commons/paths.lua	/^M.reduce = function(p)$/;"	f	unknown:M
reduce2home	lua/gentags/commons/paths.lua	/^M.reduce2home = function(p)$/;"	f	unknown:M
render	lua/gentags/commons/termcolors.lua	/^M.render = function(text, name, hl)$/;"	f	unknown:M
retrieve	lua/gentags/commons/termcolors.lua	/^M.retrieve = function(attr, hl)$/;"	f	unknown:M
rfind	lua/gentags/commons/strings.lua	/^M.rfind = function(s, t, rstart)$/;"	f	unknown:M
riterator	lua/gentags/commons/ringbuf.lua	/^function RingBuffer:riterator()$/;"	f	unknown:RingBuffer
rtrim	lua/gentags/commons/strings.lua	/^M.rtrim = function(s, t)$/;"	f	unknown:M
run	lua/gentags/commons/_system.lua	/^function M.run(cmd, opts, on_exit)$/;"	f	unknown:M
run	lua/gentags/commons/spawn.lua	/^M.run = function(cmd, opts, on_exit)$/;"	f	unknown:M
run	lua/gentags/ctags.lua	/^M.run = function()$/;"	f	unknown:M
run	lua/gentags/dispatcher.lua	/^M.run = function()$/;"	f	unknown:M
set_buf_option	lua/gentags/commons/apis.lua	/^M.set_buf_option = function(bufnr, name, value)$/;"	f	unknown:M
set_buf_option	lua/gentags/commons/buffers.lua	/^M.set_buf_option = function(bufnr, name, value)$/;"	f	unknown:M
set_win_option	lua/gentags/commons/apis.lua	/^M.set_win_option = function(winnr, name, value)$/;"	f	unknown:M
set_win_option	lua/gentags/commons/windows.lua	/^M.set_win_option = function(winnr, name, value)$/;"	f	unknown:M
setchar	lua/gentags/commons/strings.lua	/^M.setchar = function(s, pos, ch)$/;"	f	unknown:M
setup	lua/gentags.lua	/^M.setup = function(opts)$/;"	f	unknown:M
setup	lua/gentags/commons/logging.lua	/^M.setup = function(opts)$/;"	f	unknown:M
setup	lua/gentags/configs.lua	/^M.setup = function(opts)$/;"	f	unknown:M
setup_env	lua/gentags/commons/_system.lua	/^local function setup_env(env, clear_env)$/;"	f
setup_input	lua/gentags/commons/_system.lua	/^local function setup_input(input)$/;"	f
setup_output	lua/gentags/commons/_system.lua	/^local function setup_output(output)$/;"	f
shorten	lua/gentags/commons/paths.lua	/^M.shorten = function(p)$/;"	f	unknown:M
shuffle	lua/gentags/commons/numbers.lua	/^M.shuffle = function(l)$/;"	f	unknown:M
spawn	lua/gentags/commons/_system.lua	/^local function spawn(cmd, opts, on_exit, on_error)$/;"	f
split	lua/gentags/commons/strings.lua	/^M.split = function(s, sep, opts)$/;"	f	unknown:M
startswith	lua/gentags/commons/strings.lua	/^M.startswith = function(s, t, opts)$/;"	f	unknown:M
status	lua/gentags/ctags.lua	/^M.status = function()$/;"	f	unknown:M
string	lua/gentags/commons/_json.lua	/^function encode_map.string(v)$/;"	f	unknown:encode_map
table	lua/gentags/commons/_json.lua	/^function encode_map.table(t)$/;"	f	unknown:encode_map
tags_file_exists	lua/gentags/utils.lua	/^M.tags_file_exists = function(filepath)$/;"	f	unknown:M
tbl_empty	lua/gentags/commons/tables.lua	/^M.tbl_empty = function(t)$/;"	f	unknown:M
tbl_get	lua/gentags/commons/tables.lua	/^M.tbl_get = function(t, ...)$/;"	f	unknown:M
tbl_not_empty	lua/gentags/commons/tables.lua	/^M.tbl_not_empty = function(t)$/;"	f	unknown:M
terminate	lua/gentags/ctags.lua	/^M.terminate = function()$/;"	f	unknown:M
terminate	lua/gentags/dispatcher.lua	/^M.terminate = function()$/;"	f	unknown:M
throw	lua/gentags/commons/logging.lua	/^M.throw = function(fmt, ...)$/;"	f	unknown:M
throw	lua/gentags/commons/logging.lua	/^function Logger:throw(fmt, ...)$/;"	f	unknown:Logger
timer	lua/gentags/commons/_system.lua	/^    state.timer = timer_oneshot(opts.timeout, function()$/;"	f	unknown:state
timer_oneshot	lua/gentags/commons/_system.lua	/^local function timer_oneshot(timeout, cb)$/;"	f
tochars	lua/gentags/commons/strings.lua	/^M.tochars = function(s)$/;"	f	unknown:M
trim	lua/gentags/commons/strings.lua	/^M.trim = function(s, t)$/;"	f	unknown:M
unexpected_character	lua/gentags/commons/_json.lua	/^local function unexpected_character()$/;"	f
unexpected_eol	lua/gentags/commons/_json.lua	/^local function unexpected_eol()$/;"	f
utf8_char	lua/gentags/commons/_json.lua	/^    function utf8_char(c)$/;"	f
uuid	lua/gentags/commons/paths.lua	/^    local function uuid()$/;"	f
wait	lua/gentags/commons/_system.lua	/^function SystemObj:wait(timeout)$/;"	f	unknown:SystemObj
warn	lua/gentags/commons/logging.lua	/^M.warn = function(fmt, ...)$/;"	f	unknown:M
warn	lua/gentags/commons/logging.lua	/^function Logger:warn(fmt, ...)$/;"	f	unknown:Logger
workspace.checkThirdParty	.luarc.json	/^  "workspace.checkThirdParty": "Disable"$/;"	s
write	lua/gentags/commons/_system.lua	/^function SystemObj:write(data)$/;"	f	unknown:SystemObj
write	lua/gentags/commons/logging.lua	/^function ConsoleHandler:write(meta)$/;"	f	unknown:ConsoleHandler
write	lua/gentags/commons/logging.lua	/^function FileHandler:write(meta)$/;"	f	unknown:FileHandler
write	lua/gentags/commons/logging.lua	/^function Handler:write(meta)$/;"	f	unknown:Handler
writefile	lua/gentags/commons/fileios.lua	/^M.writefile = function(filename, content)$/;"	f	unknown:M
writelines	lua/gentags/commons/fileios.lua	/^M.writelines = function(filename, lines)$/;"	f	unknown:M
